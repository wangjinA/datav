"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zxt1 = exports.zxt = exports.zzt1 = exports.zzt = void 0;
// 柱状图
var zzt = "\n  option = {\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      }\n    },\n    grid: {\n      top: '5%',\n      right: '3%',\n      left: '8%',\n      bottom: '10%'\n    },\n    xAxis: [\n      {\n        type: 'category',\n        data: ['\u5168\u5E02', '\u6FE0\u6C5F\u533A', '\u6F6E\u9633\u533A', '\u6F6E\u5357\u533A', '\u6F84\u6D77\u533A', '\u9F99\u6E56\u533A', '\u91D1\u5E73\u533A', '\u5357\u6FB3\u53BF'],\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#027DB3',\n            width: 2,\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        axisLabel: {\n          margin: 10,\n          color: '#e2e9ff',\n          textStyle: {\n            fontSize: 12\n          }\n        }\n      }\n    ],\n    yAxis: [\n      {\n        axisLabel: {\n          formatter: '{value}',\n          color: '#e2e9ff',\n          textStyle: {\n            fontSize: 14\n          }\n        },\n        axisLine: {\n          show: true,\n          lineStyle: {\n            color: '#027DB3',\n            width: 2,\n          }\n        },\n        splitLine: {\n          lineStyle: {\n            color: '#027DB3',\n            type: 'dashed'\n          }\n        }\n      }\n    ],\n    series: [\n      {\n        type: 'bar',\n        data: [170, 220, 180, 210, 169, 230, 170, 210],\n        barWidth: '15px',\n        itemStyle: {\n          normal: {\n            color: (params) => { let colorList = ['#0ED6F4', '#FFB56C', '#02A1FD', '#5AE7AE', '#0ED6F4', '#FFB56C', '#02A1FD', '#5AE7AE']; return colorList[params.dataIndex] },\n            barBorderRadius: [30, 30, 0, 0],\n          }\n        },\n        label: {\n          normal: {\n            show: true,\n            position: 'outside'\n          }\n        }\n      }\n    ]\n  }\n";
exports.zzt = zzt;
var zzt1 = "\n  let _data = [\n    {\n      name: \"\u9752\u4E91\u5E97\",\n      value: 850,\n    },\n    {\n      name: \"\u957F\u5B50\u8425\",\n      value: 750,\n    },\n    {\n      name: \"\u91C7\u80B2\",\n      value: 980,\n    },\n    {\n      name: \"\u793C\u8D24\",\n      value: 150,\n    },\n    {\n      name: \"\u5B89\u5B9A\",\n      value: 350,\n    },\n  ];\n  option = {\n    animationDuration: 1500,\n    emphasis: {\n      show: false,\n    },\n    label: {\n      //\u67F1\u9876\u63D0\u793A\u6570\u5B57\n      show: false,\n    },\n    grid: {\n      left: \"8%\",\n      top: \"15%\",\n      right: \"5%\",\n      bottom: \"3%\",\n      containLabel: true,\n    },\n    xAxis: {\n      show: false,\n    },\n    yAxis: [\n      {\n        // type: 'value', //---\u8F74\u7C7B\u578B\uFF0C\u9ED8\u8BA4'category'\n        // nameGap: 15,\n        data: _data.map((item) => item.name),\n        axisLabel: {\n          fontSize: 12,\n          color: \"rgba(255,255,255,0.7)\",\n        },\n        axisLine: {\n          show: false,\n        },\n        axisTick: {\n          show: false,\n        },\n        splitLine: {\n          show: false,\n        },\n      },\n    ],\n    series: [\n      {\n        data: _data.map((item) => item.value),\n        legendHoverLink: false,\n        type: \"bar\",\n        barWidth: 5,\n        itemStyle: {\n          normal: {\n            color: () => {\n              var colorResult = new window.$echarts.graphic.LinearGradient(\n                0,\n                0,\n                1,\n                1,\n                [\n                  // \u67F1\u4F53\u989C\u8272\u6E10\u53D8\n\n                  {\n                    offset: 0,\n                    color: \"rgba(0,136,251,0.2)\",\n                  },\n                  {\n                    offset: 1,\n                    color: \"rgba(70,238,255,1)\",\n                  },\n                ],\n                false\n              );\n              return colorResult;\n            },\n            barBorderRadius: [0, 10, 10, 0],\n          },\n          emphasis: {\n            show: false,\n          },\n        },\n      },\n    ],\n  };\n"; // 折线图

exports.zzt1 = zzt1;
var zxt = "\n  option = {\n\n    tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n            type: \"shadow\",\n            textStyle: {\n                color: \"#fff\"\n            }\n\n        },\n    },\n    grid: {\n        borderWidth: 0,\n        left: \"2%\",\n        right: \"4%\",\n        bottom: \"14%\",\n        top:\"16%\",\n        textStyle: {\n            color: \"#fff\"\n        },\n    containLabel: true\n    },\n    legend: {\n        x: \"20%\",\n        top: \"2%\",\n        itemGap: 30,\n        textStyle: {\n            color: \"#90979c\",\n      fontSize: 12\n        },\n\n    },\n    calculable: true,\n    xAxis: [{\n        type: \"category\",\n        axisLine: {\n            lineStyle: {\n                color: \"rgba(204,187,225,0.5)\",\n            }\n        },\n        axisPointer: {\n          type: \"line\"\n        },\n        splitLine: {\n            show: false\n        },\n        axisTick: {\n            show: false\n        },\n        data: [\"05:00\",\"07:00\",\"09:00\",\"11:00\",\"13:00\",\"15:00\",\"17:00\",\"19:00\"],\n    }],\n\n    yAxis: [{\n        type: \"value\",\n        max:\"100\",\n        \"axisLine\": {\n            \"show\": false,\n            lineStyle: {\n                color: \"rgba(204,187,225,0.5)\",\n            }\n        },\n        splitLine: {\n            show: true,\n            lineStyle: {\n              type:\"dashed\",\n              color: \"rgba(1, 149, 176, 1)\"\n            }\n        },\n        \"axisLabel\": {\n            \"interval\": 0,\n            color: \"rgba(154, 209, 253, 1)\",\n            fontSize: 10\n        },\n        \n    },{\n        type: \"value\",\n        max:\"100\",\n        \"splitLine\": {\n            \"show\": false\n        },\n        \"axisLine\": {\n            \"show\": false\n        },\n        splitLine: {\n            show: true,\n            lineStyle: {\n              type:\"dashed\",\n              color: \"rgba(1, 149, 176, 1)\"\n            }\n        },\n        \"axisLabel\": {\n            \"interval\": 0,\n            color: \"rgba(154, 209, 253, 1)\",\n            fontSize: 10\n\n        },\n        }],\n    series: [{\n        name: \"\u603B\u73ED\u6B21  3489\",\n        type: \"line\",\n        symbolSize: 1,\n        symbol: \"circle\",\n        itemStyle: {\n            color: \"#C000FF\",\n        },\n        data: [\n            40, 50, 45, 30, 55, 35, 50, 35\n        ],\n    }, {\n        name: \"\u603B\u91CC\u7A0B  23432\",\n        type: \"line\",\n        yAxisIndex: 1,\n        symbolSize: 1,\n        symbol: \"circle\",\n        itemStyle: {\n            color: \"#00A2FF\",\n        },\n        data: [\n            60,80,65,75,70,85,65,80\n        ]\n    }, ]\n  }\n";
exports.zxt = zxt;
var zxt1 = "\n  let _data = [\n    {\n      name: \"\u9752\u4E91\u5E97\",\n      value: 850,\n    },\n    {\n      name: \"\u957F\u5B50\u8425\",\n      value: 750,\n    },\n    {\n      name: \"\u91C7\u80B2\",\n      value: 680,\n    },\n    {\n      name: \"\u793C\u8D24\",\n      value: 450,\n    },\n    {\n      name: \"\u5B89\u5B9A\",\n      value: 350,\n    },\n    {\n      name: \"\u6986\u57A1\",\n      value: 166,\n    },\n  ];\n  option = {\n    animationDuration: 1500,\n    emphasis: {\n      show: false,\n    },\n    label: {\n      show: false,\n    },\n    grid: {\n      left: \"8%\",\n      top: \"18%\",\n      right: \"5%\",\n      bottom: \"18%\",\n      containLabel: true,\n    },\n    xAxis: [\n      {\n        boundaryGap: false,\n        offset: 3,\n        data: _data.map((item) => item.name),\n        axisLabel: {\n          fontSize: 12,\n          color: \"rgba(255,255,255,0.7)\",\n        },\n        axisLine: {\n          show: false,\n        },\n        axisTick: {\n          show: true,\n          inside: false,\n          alignWithLabel: true,\n          lineStyle: {\n            width: 2,\n            color: \"rgba(255,255,255,0.7)\",\n          },\n        },\n      },\n    ],\n    yAxis: [\n      {\n        // type: \"value\", //---\u8F74\u7C7B\u578B\uFF0C\u9ED8\u8BA4\"category\"\n        offset: 3,\n        axisLabel: {\n          fontSize: 14,\n          color: \"rgba(255,255,255,0.7)\",\n          formatter(value) {\n            // \u683C\u5F0F\u5316Y\u8F74\u6570\u5B57\u683C\u5F0F\uFF0C\u53BB\u6389\u5343\u4F4D\u7B26\n            let res1 = 0;\n            res1 = value;\n            return res1;\n          },\n        },\n        axisLine: {\n          show: false,\n        },\n\n        axisTick: {\n          show: false,\n        },\n        splitLine: {\n          show: true,\n          lineStyle: {\n            color: \"rgba(255,255,255,0.15)\",\n            width: 1,\n          },\n        },\n      },\n    ],\n    series: [\n      {\n        data: _data.map((item) => item.value),\n        type: \"line\",\n        hoverAnimation: true,\n        showAllSymbol: true,\n        symbol: \"circle\",\n        symbolSize: 5,\n        lineStyle: {\n          normal: {\n            color: \"rgba(0,255,255,1)\",\n            width: 2,\n            shadowBlur: 0,\n          },\n        },\n        itemStyle: {\n          color: \"rgba(0,255,255,1)\",\n          borderColor: \"rgba(255,255,255,1)\",\n          borderWidth: 1,\n        },\n        areaStyle: {\n          color: new window.$echarts.graphic.LinearGradient(\n            0,\n            0,\n            0,\n            1,\n            [\n              {\n                offset: 0,\n                color: \"rgba(0,255,255,0.8)\",\n              },\n              {\n                offset: 1,\n                color: \"rgba(0,255,255,0.1)\",\n              },\n            ],\n            false\n          ),\n        },\n        origin: \"start\",\n      },\n    ],\n  };\n";
exports.zxt1 = zxt1;